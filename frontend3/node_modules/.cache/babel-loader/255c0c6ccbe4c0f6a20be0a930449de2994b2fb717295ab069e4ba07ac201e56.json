{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\splitwise_alone\\\\frontend3\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://127.0.0.1:5000'; // Updated to match Login component\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n\n  // Check if user is already logged in (token exists)\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        // Fetch user data using the token\n        const response = await axios.get(`${API_URL}/users/me`, {\n          headers: {\n            Authorization: token\n          }\n        });\n        setCurrentUser(response.data);\n      } catch (error) {\n        console.error('Token verification failed:', error);\n        logout(); // Clear invalid token\n      } finally {\n        setLoading(false);\n      }\n    };\n    verifyToken();\n  }, [token]);\n\n  // Login method to set token and user data\n  const login = async (email, password) => {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    const userToken = response.data.token;\n\n    // Store token\n    localStorage.setItem('token', userToken);\n    setToken(userToken);\n\n    // Get user data\n    const userResponse = await axios.get(`${API_URL}/users/me`, {\n      headers: {\n        Authorization: userToken\n      }\n    });\n    setCurrentUser(userResponse.data);\n    return userResponse.data;\n  };\n\n  // Logout method\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    token,\n    login,\n    logout,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiZ2j9O3cWWnQ3aEm8kDt6I2MmQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","API_URL","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","token","setToken","localStorage","getItem","verifyToken","response","get","headers","Authorization","data","error","console","logout","login","email","password","post","userToken","setItem","userResponse","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Code/splitwise_alone/frontend3/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:5000'; // Updated to match Login component\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n\r\n  // Check if user is already logged in (token exists)\r\n  useEffect(() => {\r\n    const verifyToken = async () => {\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Fetch user data using the token\r\n        const response = await axios.get(`${API_URL}/users/me`, {\r\n          headers: { Authorization: token }\r\n        });\r\n        \r\n        setCurrentUser(response.data);\r\n      } catch (error) {\r\n        console.error('Token verification failed:', error);\r\n        logout(); // Clear invalid token\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    verifyToken();\r\n  }, [token]);\r\n\r\n  // Login method to set token and user data\r\n  const login = async (email, password) => {\r\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n    const userToken = response.data.token;\r\n    \r\n    // Store token\r\n    localStorage.setItem('token', userToken);\r\n    setToken(userToken);\r\n    \r\n    // Get user data\r\n    const userResponse = await axios.get(`${API_URL}/users/me`, {\r\n      headers: { Authorization: userToken }\r\n    });\r\n    \r\n    setCurrentUser(userResponse.data);\r\n    return userResponse.data;\r\n  };\r\n\r\n  // Logout method\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    token,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!token\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}